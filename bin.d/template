#!/usr/bin/env node

const tmpls = [
	function() {
	return Array.from(arguments).map(argv => {
		const name=argv
		const camel=name.split('_').reduce(function(all, cur){
			return all + cur.charAt(0).toUpperCase() + cur.substr(1)
		}, '')
		const arg = camel.charAt(0).toLowerCase() + camel.substr(1)
		return `public function get${camel}()
	{
		return \\$this->${name};
	}

	public function set${camel}(\\\$${arg})
	{
		\\$this->${name} = \\\$${arg};
	}` }).join('\n\n')
	},
	function() {
		return `module.exports = function(sqlz, Types) {
	return sqlz.define('', {
	}, {
		classMethods: {
			associate(models) {}
		},
	})
}`
	},
	function(name) {
		return `<?php

namespace test\Controllers\RegistrationControllerTest;

use test\\MinimumDb;
use test\\unit\\TestCase;

class ${name} extends TestCase
{
	use MinimumDb;
	
	/** @test */
	public function ${name}()
	{

	}
}`
	},
	function(name) {
		return `- DB_HOST=127.0.0.1 DB_DATABASE=circle_test DB_USERNAME=ubuntu ./vendor/bin/phpunit test/integration/Controllers/RegistrationControllerTest/${name}`
	}
]

const args = process.argv
const selection = Number(args[2])
if (selection != 1 && process.argv.length < 4) console.error('Need to provide a number and slug') || process.exit(5)

//const selection = Number(args[2])
const func = tmpls[selection]
const code = func.apply(null, args.splice(3))

const exec = require('child_process').exec
exec(`echo "${code}" | xclip -selection clipboard`, (err, stdout, stderr) => {
	if (err) console.error(err) || process.exit(5)
	process.exit(0)
})
process.exit(0)
